The following ABNF grammar defines the ZeroMQ Command & Control Protocol:

    ZCCP = greeting ( traffic / heartbeat ) signoff
    
    greeting = C:HELLO S:HELLO-OK
    
    traffic = C:SUBSCRIBE / C:PUBLISH / C:DIRECT /
              S:DELIVER

    heartbeat = S:PING C:PING-OK
    
    signoff = C:GOODBYE S:GOODBYE-OK

    ;         Client greets the server and provides its identifier.
    hello           = signature %d1 identifier headers
    signature       = %xAA %xA10            ; two octets
    identifier      = string                ; Client identifier
    headers         = dictionary            ; Client properties

    ;         Server confirms client
    hello_ok        = signature %d2 headers
    headers         = dictionary            ; Server properties

    ;         Client subscribes to some set of messages
    subscribe       = signature %d3 expression headers
    expression      = string                ; Regular expression
    headers         = dictionary            ; Subscription options

    ;         Server confirms subscription.
    subscribe_ok    = signature %d4

    ;         Client publishes a message to the server
    publish         = signature %d5 address headers content
    address         = string                ; Logical address
    headers         = dictionary            ; Content header fields
    content         = msg                   ; Content, as multipart message

    ;         Client sends a message to a specific client
    direct          = signature %d6 address headers content
    address         = string                ; Client identifier
    headers         = dictionary            ; Content header fields
    content         = msg                   ; Content, as multipart message

    ;         Server delivers a message to client
    deliver         = signature %d7 sender address headers content
    sender          = string                ; Originating client
    address         = string                ; Message address
    headers         = dictionary            ; Content header fields
    content         = msg                   ; Content, as multipart message

    ;         Client says goodbye to server
    goodbye         = signature %d8

    ;         Server confirms client signoff
    goodbye_ok      = signature %d9 headers
    headers         = dictionary            ; Session statistics

    ;         Server pings the client if there's no traffic
    ping            = signature %d10

    ;         Client replies to a PING
    ping_ok         = signature %d11

    ;         Client sent a message that was not valid at this time
    invalid         = signature %d12

    ; A list of name/value pairs
    dictionary      = dict-count *( dict-name dict-value )
    dict-count      = number-4
    dict-value      = longstr
    dict-name       = string

    ; A msg is zero or more distinct frames
    msg             = *frame

    ; Strings are always length + text contents
    string          = number-1 *VCHAR
    longstr         = number-4 *VCHAR

    ; Numbers are unsigned integers in network byte order
    number-1        = 1OCTET
    number-4        = 4OCTET

